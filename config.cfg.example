# CONFIG FILE FOR CLUSTERING-PIPELINE

# INPUT SPECIES-NAMES & ASSEMBLY-FASTA-FILES
[INPUT]

# Create a subset of configurations for each organism you want to cluster

[[ORGANISM1]]
name = "Test organism #1"	# full name of your organism 
prefix = "to1"	    # organism-prefix, used in resulting clusters, 3 to 4 characters long
assembly_fasta = "/bastian/master_thesis/scripts/ClusterPipeline/testdata/hanno_test1.fna" # full path to assembly file (or nucleotide-orfs if you want to skip orf-prediction)
unique_field = 1	# which field in the fasta-header is unique 
        			# and shall be used to discriminate sequences of each file?
		        	# field separators are in fastas are " " and "|" 
skip_orfs = False    # if you already have predicted open reading frames you can skip the step by setting it to true, else use "False"
peptides_fasta = "/bastian/master_thesis/scripts/ClusterPipeline/testdata/skip_orf_snps/to1-aa-orfs.fasta" # where are the protein-sequences of the open reading frames located?
skip_snps = False
bam_file = "/bastian/master_thesis/scripts/ClusterPipeline/testdata/hanno_test1.bam" # where is the indexed bam-file for snp-prediction located?
snp_file = "/bastian/master_thesis/scripts/ClusterPipeline/testdata/skip_orf_snps/to1_snps.fasta"

[[ORGANISM2]]
name = "Test organism #2"
prefix = "to2"
assembly_fasta = "/bastian/master_thesis/scripts/ClusterPipeline/testdata/skip_orf_snps/to2-nucleotide-orfs.fasta"
unique_field = 1
skip_orfs = True
peptides_fasta = "/bastian/master_thesis/scripts/ClusterPipeline/testdata/skip_orf_snps/to2-aa-orfs.fasta"
skip_snps = True
bam_file = "/bastian/master_thesis/scripts/ClusterPipeline/testdata/hanno_test2.bam"
snp_file = "/bastian/master_thesis/scripts/ClusterPipeline/testdata/skip_orf_snps/to2_snps.fasta"

# SNP CALLING
[SNP]
call_snps = True
coverage = 10
frequency = 0.2

# PARAMETERS FOR TRIMMING FINAL ALIGNMENTS
[TRIMMING]
trim = True
min_length_cutoff = 51 # minimum length which non-gap alignment-parts need to be to be kept
trim_length = 15 # number of nucleotides to remove in front and end

# OUTPUT
[OUTPUT]
folder = "/bastian/master_thesis/scripts/ClusterPipeline/hanno_test/" # Give the complete path to where results should be stored
logging = True # shall the pipeline write a log of all actions into output-folder?

# SETTINGS FOR ORF-PREDICTION (done via ORFPredictor)
[ORFPREDICTION]
minimum_length = 50 # minimum length an ORF has to be if no blast-guidance could be found, in AA
database = /home/informatics/Dokumente/ncbi-blast-2.2.23+/Blast_linux_installed/swissprot # path to the blastx-supporting database you want to use

# SETTINGS FOR ORTHOMCL / CLUSTERING
[ORTHOMCL]
result_prefix = "tt" # prefix the final clusters should carry
start_number = "1000" # number the clusters should start on
# min_number_species = 3 # minimum number of species which have to be in a cluster, currently broken
location = "/bastian/tools/orthomcl/bin/" # where the orthomcl-executables are stored
minimum_length = 10 # minimum length of aa-sequences
max_percent_stop = 20 # maximum percent of stop codons
makeblastdb = "/home/informatics/Dokumente/ncbi-blast-2.2.23+/bin/makeblastdb" # path to makeblastdb
dbLogin = root		# your login
dbPassword = radix 	# your password

# you shouldn't need to edit this
dbVendor = mysql	# type of database you want to use, right now only mysql works
dbConnectString = dbi:mysql:orthomcl # how to connect and which database to use
similarSequencesTable=SimilarSequences
orthologTable=Ortholog
inParalogTable=InParalog
coOrthologTable=CoOrtholog
interTaxonMatchView=InterTaxonMatch
percentMatchCutoff=50
evalueExponentCutoff=-5
oracleIndexTblSpc=NONE
